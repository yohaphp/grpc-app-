# GRPC service configuration
grpc:
  # socket to listen
  listen: "tcp://localhost:9001"

  # proto root file
  proto: "test.proto"

  # max send limit (MB)
  MaxSendMsgSize: 50
  # max receive limit (MB)
  MaxRecvMsgSize: 50
  # MaxConnectionIdle is a duration for the amount of time after which an
  #	idle connection would be closed by sending a GoAway. Idleness duration is
  #	defined since the most recent time the number of outstanding RPCs became
  #	zero or the connection establishment.
  MaxConnectionIdle: 0s
  # MaxConnectionAge is a duration for the maximum amount of time a
  #	connection may exist before it will be closed by sending a GoAway. A
  #	random jitter of +/-10% will be added to MaxConnectionAge to spread out
  #	connection storms.
  MaxConnectionAge: 0s
  # MaxConnectionAgeGrace is an additive period after MaxConnectionAge after
  #	which the connection will be forcibly closed.
  MaxConnectionAgeGrace: 0s
  # MaxConnectionAgeGrace is an additive period after MaxConnectionAge after
  #	which the connection will be forcibly closed.
  MaxConcurrentStreams: 10
  # After a duration of this time if the server doesn't see any activity it
  #	pings the client to see if the transport is still alive.
  #	If set below 1s, a minimum value of 1s will be used instead.
  PingTime: 1s
  # After having pinged for keepalive check, the server waits for a duration
  #	of Timeout and if no activity is seen even after that the connection is
  #	closed.
  Timeout: 200s

  # worker and pool configuration
  workers:
    command: "php worker.php"
    pool:
      numWorkers: 1
      maxJobs:    1

metrics:
  # prometheus client address (path /metrics added automatically)
  address: localhost:2112

  # list of metrics to collect from application
  collect:
    # metric name
    app_metric:
      # type [gauge, counter, histogram, symnmary]
      type:    histogram

      # short description
      help:    "Custom application metric"

      # metric groups/tags
      labels:  ["type"]

      # for histogram only
      buckets: [0.1, 0.2, 0.3, 1.0]

# monitors rr server(s)
limit:
  # check worker state each second
  interval: 1

  # custom watch configuration for each service
  services:
    # monitor http workers
    grpc:
      # maximum allowed memory consumption per worker (soft)
      maxMemory: 100

      # maximum time to live for the worker (soft)
      TTL: 0

      # maximum allowed amount of time worker can spend in idle before being removed (for weak db connections, soft)
      idleTTL: 0

      # max_execution_time (brutal)
      execTTL: 60